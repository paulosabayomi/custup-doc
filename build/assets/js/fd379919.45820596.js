"use strict";(self.webpackChunkcustup_doc=self.webpackChunkcustup_doc||[]).push([[5995],{7504:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>r,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var t=s(5893),o=s(1151);const a={sidebar_position:1},i="Basics",l={id:"guides/basics",title:"Basics",description:"First of all import CustUp",source:"@site/docs/guides/basics.md",sourceDirName:"guides",slug:"/guides/basics",permalink:"/docs/guides/basics",draft:!1,unlisted:!1,editUrl:"https://github.com/paulosabayomi/custup-doc/tree/main/docs/guides/basics.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Guides",permalink:"/docs/category/guides"},next:{title:"File sources",permalink:"/docs/guides/file-sources"}},r={},c=[];function d(e){const n={br:"br",code:"code",h1:"h1",p:"p",pre:"pre",strong:"strong",...(0,o.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"basics",children:"Basics"}),"\n",(0,t.jsx)(n.p,{children:"First of all import CustUp"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'import CustUp from "/path/to/custup/src/custup.min.js"\n'})}),"\n",(0,t.jsx)(n.p,{children:"Basic options"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const options = {\n    targetRootElement: "#container",\n    allowed_file_types: [\'mp3\', "mp4", "jpg", "png", "jpeg","pdf"],\n    maxNumberOfFiles: 5,\n    minNumberOfFiles: 3,\n    maximumAllowedFileSize: 10000000,\n}\n\nconst uploader = new CustUp(options)\n'})}),"\n",(0,t.jsx)(n.p,{children:"To change UI type"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const options = {\n    // ...\n    ui_type: 'detached', // the detached UI type, see more in Options sections below\n}\n\nconst uploader = new CustUp(options)\n"})}),"\n",(0,t.jsxs)(n.p,{children:["To change font style set the ",(0,t.jsx)(n.code,{children:"css_font_link"})," to the link to the Google Font you would like CustUp to use, and or only set ",(0,t.jsx)(n.code,{children:"css_font_name"})," to your application's font name if you want to use the application's font name."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Note:"})," CustUp currently only supports Google Fonts"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const options = {\n    // ...\n    css_font_link: "https://fonts.googleapis.com/css2?family=Dancing+Script&display=swap",\n    css_font_name: "Dancing Script",\n}\n\nconst uploader = new CustUp(options)\n'})}),"\n",(0,t.jsx)(n.p,{children:"To customise the CSS styles of any element you can either override or add to the css class name of the element"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:" const options = {\n        // ...\n        default_styles_override: {\n            remove_file_btn: ['close_btn', true],\n            fileDisplayUI: ['custup_inner_container', true],\n            fileUIOuterContainer: ['custup_file_display_outer', true],\n            fileUI: ['custup_file_ui_outer', true],\n            file_wrapper_el: ['file_wrapper', true],\n            fileDetailsContainer: ['file_details', true],\n            UITool: ['tool_container', true],\n            custupInnerContainerWrapperEl: ['inner_container_wrapper', true],\n            headerContainer: 'header_cont',\n            footerContainer: 'footer_container'\n        },\n    }\n\nconst uploader = new CustUp(options)\n"})}),"\n",(0,t.jsxs)(n.p,{children:["All CustUp styles are exposed with the ",(0,t.jsx)(n.code,{children:"default_styles_override"})," option and you can add a css class name to each element or override their styles, to add a class name to the list of class names of an element you should provide an ",(0,t.jsx)(n.code,{children:"array"})," which take the class name(s) you would like to add to the element and ",(0,t.jsx)(n.code,{children:"true"})," which indicates that the class name should be added to the element's class list.",(0,t.jsx)(n.br,{}),"\n","To override the element's class list you should either profile the new class name in a ",(0,t.jsx)(n.code,{children:"string"})," format or pass an array with ",(0,t.jsx)(n.code,{children:"false"})," as the second item."]}),"\n",(0,t.jsx)(n.p,{children:"For file upload settings, you can also add additional data that should be sent along the files, and/or a form field data to be sent along with the upload and you can also set the axios settings"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const options = {\n    // ...\n    file_upload: {\n        endpoint_url: 'http://localhost/fileupload', // endpoint\n        additional_data: { // additional data to be sent along with the \n            user_id: 123456789,\n            username: 'johndoe'\n        },\n        form_field: '#form', // HTMLFormElement\n        axios_settings: {\n            headers: {}, // configure the axios header, like add a Bearer token\n            configs: {}, // add a configuration to axios\n        }\n    },\n}\n\nconst uploader = new CustUp(options)\n"})}),"\n",(0,t.jsxs)(n.p,{children:["To set CustUp to automatically upload files immediately after files has been added to the UI set the ",(0,t.jsx)(n.code,{children:"upload_automatically"})," to ",(0,t.jsx)(n.code,{children:"true"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const options = {\n    // ...\n    upload_automatically: true,\n}\n\nconst uploader = new CustUp(options)\n"})}),"\n",(0,t.jsx)(n.p,{children:"If you wants to use another HTML elements to control the upload, you can set the UI tools to not display on the default UI."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const options = {\n    // ...\n    display_ui_tools: false,\n}\n\nconst uploader = new CustUp(options)\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Even the CustUp scrolling and scrollbar are custom made so you can also customize them, to not show the scrollbar set ",(0,t.jsx)(n.code,{children:"disable_scrollbar"})," to ",(0,t.jsx)(n.code,{children:"false"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const options = {\n    // ...\n    disable_scrollbar: false\n}\nconst uploader = new CustUp(options)\n"})}),"\n",(0,t.jsx)(n.p,{children:"When previewing a file there are in and out animations, by default the animations are randomized but you can set which animations to use or you can also disable the animations"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const options = {\n    // ...\n    file_preview_animation_types: ['slideInLeft'], // the animation previewer will only use `slideInLeft` animation type\n\n    // file_preview_animation_types: ['slideInRight', 'zoomIn', 'slideInLeft'], // this will randomly choose between the array of the animations when displaying files\n\n    // file_preview_animation_types: null, // to disable file preview animation set it to null\n}\nconst uploader = new CustUp(options)\n"})})]})}function u(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},1151:(e,n,s)=>{s.d(n,{Z:()=>l,a:()=>i});var t=s(7294);const o={},a=t.createContext(o);function i(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);