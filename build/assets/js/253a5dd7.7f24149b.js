"use strict";(self.webpackChunkcustup_doc=self.webpackChunkcustup_doc||[]).push([[5071],{2769:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>c,toc:()=>i});var s=o(5893),n=o(1151);const r={sidebar_position:7},l="Scrollbar",c={id:"customization/scrollbar",title:"Scrollbar",description:"Even CustUp's container scrolling is custom made including the scroll bar, though I have not yet made the container scrolling to be customizable but the scrollbar is customizable and can even be set to not display.",source:"@site/docs/customization/scrollbar.md",sourceDirName:"customization",slug:"/customization/scrollbar",permalink:"/docs/customization/scrollbar",draft:!1,unlisted:!1,editUrl:"https://github.com/paulosabayomi/custup-doc/tree/main/docs/customization/scrollbar.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"Icons",permalink:"/docs/customization/icons"},next:{title:"Tools",permalink:"/docs/customization/tools"}},a={},i=[];function d(e){const t={code:"code",h1:"h1",p:"p",pre:"pre",...(0,n.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"scrollbar",children:"Scrollbar"}),"\n",(0,s.jsx)(t.p,{children:"Even CustUp's container scrolling is custom made including the scroll bar, though I have not yet made the container scrolling to be customizable but the scrollbar is customizable and can even be set to not display."}),"\n",(0,s.jsxs)(t.p,{children:["To hide the scrollbar or simply to not show the scrollbar at all set ",(0,s.jsx)(t.code,{children:"disable_scrollbar"})," to ",(0,s.jsx)(t.code,{children:"true"})]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"const instance1 = new CustUp({\n    // ...\n    disable_scrollbar: true\n})\n"})}),"\n",(0,s.jsxs)(t.p,{children:["The scrollbar can also be styled to your taste, to style the scrollbar you can either add a new class name to the scrollbar element or override the scrollbar class names, the ",(0,s.jsx)(t.code,{children:"scrollBarEl"})," style override option in ",(0,s.jsx)(t.code,{children:"default_styles_override"})," is the scrollbar element style and you can override or add new class name(s) to it like below"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"const instance1 = new CustUp({\n    default_styles_override: {\n        scrollBarEl: ['random_scrollbar_el', true],\n        // scrollBarEl: \"random_scrollbar_el\", // to override the current scrollbar element class name\n    }\n})\n"})})]})}function u(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},1151:(e,t,o)=>{o.d(t,{Z:()=>c,a:()=>l});var s=o(7294);const n={},r=s.createContext(n);function l(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);