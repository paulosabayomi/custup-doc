"use strict";(self.webpackChunkcustup_doc=self.webpackChunkcustup_doc||[]).push([[2259],{9435:(e,n,t)=>{t.r(n),t.d(n,{CustUpUI:()=>u,assets:()=>d,contentTitle:()=>l,default:()=>m,frontMatter:()=>a,metadata:()=>c,toc:()=>h});var i=t(5893),s=t(1151),r=t(7294),o=t(3486);const a={sidebar_position:1},l="Overview",c={id:"customization/overview",title:"Overview",description:"The main reason why CustUp was made is so that it can be fully customized and adapted to any project design quickly and by just changing or adding to the CSS classes.",source:"@site/docs/customization/overview.mdx",sourceDirName:"customization",slug:"/customization/overview",permalink:"/docs/customization/overview",draft:!1,unlisted:!1,editUrl:"https://github.com/paulosabayomi/custup-doc/tree/main/docs/customization/overview.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Customization",permalink:"/docs/category/customization"},next:{title:"Main UI Styles",permalink:"/docs/customization/main-ui"}},d={},h=[{value:"Styles division",id:"styles-division",level:3},{value:"Setting the options",id:"setting-the-options",level:3},{value:"Style override examples",id:"style-override-examples",level:3}],u=({})=>{const e={div:"div",...(0,s.a)()};return r.useEffect((()=>{new o.Z({targetRootElement:"#container",allowed_sources:null,default_styles_override:{outerContainer:["custup_outer_contaner",!0],innerContainer:["inner_container_el",!0],headerContainer:"header_cont",footerContainer:"footer_container",sidebarLeftContainer:"side_bar_left",sidebarRightContainer:"side_bar_right",custupInnerContainerWrapperEl:["inner_container_wrapper",!0],defaultUI:"",fileUIOuterContainer:["file_ui_outer",!0]},allowed_tools:null})}),[]),(0,i.jsx)(i.Fragment,{children:(0,i.jsx)(e.div,{id:"container",style:{marginBottom:10,width:"100%",display:"flex",justifyContent:"center"}})})};function p(e){const n={code:"code",h1:"h1",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"overview",children:"Overview"}),"\n","\n","\n",(0,i.jsx)(n.p,{children:"The main reason why CustUp was made is so that it can be fully customized and adapted to any project design quickly and by just changing or adding to the CSS classes."}),"\n",(0,i.jsxs)(n.p,{children:["All the css class names of the all the elements of CustUp is exposed with the ",(0,i.jsx)(n.code,{children:"default_styles_override"})," option."]}),"\n",(0,i.jsx)(n.p,{children:"CustUp is structured into header, left container, right container, inner container and footer container."}),"\n","\n",(0,i.jsx)(u,{}),"\n",(0,i.jsx)(n.p,{children:"The section with blue background is the header section, the section with green background is the right sidebar section, the section with red background is the footer section, the section with yellow background is the right sidebar section and the section at the center with white background color is the inner container."}),"\n",(0,i.jsx)(n.p,{children:"Of course the example above is a working implementation of CustUp you can drop files in it to see it in action."}),"\n",(0,i.jsx)(n.p,{children:"The example above can be achieved as follows"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"const instance1 = new CustUp({\n  default_styles_override: {\n    // outerContainer: ['custup_outer_contaner', true], // added to control the width and to center CustUp\n    innerContainer: ['inner_container_el', true], // appends new class name to the inner container element\n    headerContainer: 'header_cont', // overrides all the element's class names\n    footerContainer: 'footer_container',\n    sidebarLeftContainer: 'side_bar_left',\n    sidebarRightContainer: 'side_bar_right',\n    custupInnerContainerWrapperEl: ['inner_container_wrapper', true], // a must add to  set the height of the inner container like `height: calc(100% - 100px)`\n    // defaultUI: '', // this was added to hide the default UI\n  }\n})\n"})}),"\n",(0,i.jsx)(n.p,{children:"and the provided CSS class names style"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",metastring:'title="random-css-file.css"',children:"<style>\n  .inner_container_el {\n    width: calc(100% - 120px) !important;\n    border-radius: 0px !important;\n  }\n  .header_cont {\n      width: 100%;\n      height: 50px !important;\n      background-color: blue;\n  }\n  .footer_container {\n      width: 100%;\n      height: 50px !important;\n      background-color: red;\n  }\n  .side_bar_left {\n      width: 60px !important;\n      background-color: yellow !important;\n      height: 100% !important;\n  }\n  .side_bar_right {\n      width: 60px !important;\n      background-color: green !important;\n      height: 100% !important;\n  }\n  .inner_container_wrapper {\n    height: calc(100% - 100px) !important;\n  }\n</style>\n"})}),"\n",(0,i.jsx)(n.p,{children:"This gives room for full customisation of the library to fit into your project."}),"\n",(0,i.jsx)(n.h3,{id:"styles-division",children:"Styles division"}),"\n",(0,i.jsx)(n.p,{children:"The styles are currently divided into 3 aspect of the UI"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Styles for the Main UI elements"}),"\n",(0,i.jsx)(n.li,{children:"Styles for External file sources UI elements and"}),"\n",(0,i.jsx)(n.li,{children:"Styles for the Media file sources UI elements"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"setting-the-options",children:"Setting the options"}),"\n",(0,i.jsxs)(n.p,{children:["To add new class name to an element's current list of class names set the element's class name to an array which contains the new class name(s) in a ",(0,i.jsx)(n.code,{children:"string"})," and a ",(0,i.jsx)(n.code,{children:"boolean"})," of either ",(0,i.jsx)(n.code,{children:"true"})," or ",(0,i.jsx)(n.code,{children:"false"}),", ",(0,i.jsx)(n.code,{children:"true"})," indicates that the provided class name should be added to the list of the element's class name and ",(0,i.jsx)(n.code,{children:"false"})," indicates that the provided class name should override the element's class name(s), or simply provide the new class name in a ",(0,i.jsx)(n.code,{children:"string"})]}),"\n",(0,i.jsx)(n.h3,{id:"style-override-examples",children:"Style override examples"}),"\n",(0,i.jsx)(n.p,{children:"To add a class name to an element's list of class names"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"const instance1 = new CustUp({\n  default_styles_override: {\n    defaultUI: ['new_class_name_for_the_default_ui_container', true]\n  }\n})\n"})}),"\n",(0,i.jsx)(n.p,{children:"To override the class names of an element"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"const instance1 = new CustUp({\n  default_styles_override: {\n    defaultUI: ['new_class_name_for_the_default_ui_container', false]\n  }\n})\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Or use a ",(0,i.jsx)(n.code,{children:"string"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'const instance1 = new CustUp({\n  default_styles_override: {\n    defaultUI: "new_class_name_for_the_default_ui_container"\n  }\n})\n'})}),"\n",(0,i.jsx)(n.p,{children:"The above is the recommended way to override an element's class name"})]})}function m(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>o});var i=t(7294);const s={},r=i.createContext(s);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);